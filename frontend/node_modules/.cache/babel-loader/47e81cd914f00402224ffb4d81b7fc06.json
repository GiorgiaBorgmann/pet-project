{"ast":null,"code":"import _regeneratorRuntime from \"/Users/giorgiaborgmann/Documents/Itc/pet-project/pet-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\n\nvar WidgetButton = function WidgetButton(_ref) {\n  var myWidgetFunction = _ref.myWidgetFunction,\n      style = _ref.style,\n      buttonText = _ref.buttonText;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"cloudinary_upload_button\",\n    style: style || {\n      color: 'white',\n      border: 'none',\n      width: '120px',\n      backgroundColor: 'green',\n      borderRadius: '4px',\n      height: '25px'\n    },\n    onClick: function onClick() {\n      return myWidgetFunction();\n    }\n  }, buttonText || 'Upload files'));\n};\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar instance = axios.create();\ninstance.interceptors.response.use(function (response) {\n  return response.data;\n});\n\nvar getterFunction = function getterFunction(_ref) {\n  var url = _ref.url,\n      data = _ref.data,\n      accepts = _ref.accepts,\n      contentType = _ref.contentType,\n      withCredentials = _ref.withCredentials;\n  instance.defaults.headers.common['Accepts'] = accepts;\n  instance.defaults.headers.common['Content-Type'] = contentType;\n  instance.defaults.withCredentials = withCredentials;\n  var options = {\n    url: url + '?nocache=' + new Date().getTime(),\n    method: 'get',\n    params: data\n  };\n  return instance(options);\n};\n\nvar generateSignature = function generateSignature(cb, params, _ref, logging) {\n  var generateSignatureUrl = _ref.generateSignatureUrl,\n      accepts = _ref.accepts,\n      contentType = _ref.contentType,\n      withCredentials = _ref.withCredentials,\n      customPublicId = _ref.customPublicId,\n      eager = _ref.eager,\n      apiKey = _ref.apiKey,\n      resourceType = _ref.resourceType;\n  params = [].concat(params); //params can be a single object or an array of objects\n\n  logging && console.log(params, 'Params');\n  Promise.all(params.map(function (req) {\n    var uploadParams = req;\n    return getterFunction({\n      url: generateSignatureUrl,\n      data: {\n        params_to_sign: _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, eager && {\n          eager: eager\n        }), customPublicId && {\n          public_id: customPublicId\n        }), req.source && {\n          source: req.source\n        }), {}, {\n          timestamp: req.timestamp,\n          unique_filename: req.unique_filename\n        }, req.upload_preset && {\n          upload_preset: req.upload_preset\n        }), req.use_filename && {\n          use_filename: req.use_filename\n        })\n      },\n      accepts: accepts,\n      contentType: contentType,\n      withCredentials: withCredentials\n    }).then(function (response) {\n      logging && console.log(response, 'Signature Response');\n      return Object.assign({\n        signature: response,\n        api_key: apiKey,\n        resource_type: resourceType\n      }, uploadParams);\n    });\n  })).then(function (results) {\n    logging && console.log(results, 'Results');\n    cb(results.length === 1 ? results[0] : results);\n  });\n};\n\nvar myWidget = function myWidget(sources, sourceKeys, resourceType, cloudName, uploadPreset, folder, cropping, generateSignatureUrl, onSuccess, onFailure, logging, customPublicId, eager, apiKey, accepts, contentType, withCredentials, use_filename, unique_filename) {\n  var widget = !!window.cloudinary && window.cloudinary.createUploadWidget(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({\n    // showCompletedButton: true,\n    multiple: true,\n    showAdvancedOptions: true,\n    showPoweredBy: false,\n    sources: sources\n  }, sourceKeys && sourceKeys), {}, {\n    cloudName: cloudName,\n    uploadPreset: uploadPreset,\n    folder: folder,\n    cropping: cropping,\n    resourceType: resourceType\n  }, generateSignatureUrl && {\n    use_filename: use_filename\n  }), generateSignatureUrl && {\n    unique_filename: unique_filename\n  }), generateSignatureUrl && {\n    prepareUploadParams: function () {\n      var _prepareUploadParams = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cb, params) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return generateSignature(cb, params, {\n                  generateSignatureUrl: generateSignatureUrl,\n                  accepts: accepts,\n                  contentType: contentType,\n                  withCredentials: withCredentials,\n                  customPublicId: customPublicId,\n                  eager: eager,\n                  apiKey: apiKey,\n                  resourceType: resourceType\n                }, logging);\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function prepareUploadParams(_x, _x2) {\n        return _prepareUploadParams.apply(this, arguments);\n      }\n\n      return prepareUploadParams;\n    }()\n  }), function (error, result) {\n    if (!error && result && result.event === 'success') {\n      logging && console.log('Done! Here is the image info: ', result.info);\n      logging && console.log(result);\n      !!onSuccess && onSuccess(result);\n    } else if (!!error) {\n      !!onFailure ? onFailure({\n        error: error,\n        result: result\n      }) : logging && console.log({\n        error: error,\n        result: result\n      });\n    } else {\n      logging && console.log(result);\n    }\n  });\n  widget.open();\n};\n\nvar UploadWidget = function UploadWidget(_ref) {\n  var _ref$sources = _ref.sources,\n      sources = _ref$sources === void 0 ? [] : _ref$sources,\n      _ref$sourceKeys = _ref.sourceKeys,\n      sourceKeys = _ref$sourceKeys === void 0 ? null : _ref$sourceKeys,\n      _ref$resourceType = _ref.resourceType,\n      resourceType = _ref$resourceType === void 0 ? 'auto' : _ref$resourceType,\n      _ref$cloudName = _ref.cloudName,\n      cloudName = _ref$cloudName === void 0 ? null : _ref$cloudName,\n      _ref$uploadPreset = _ref.uploadPreset,\n      uploadPreset = _ref$uploadPreset === void 0 ? null : _ref$uploadPreset,\n      _ref$buttonText = _ref.buttonText,\n      buttonText = _ref$buttonText === void 0 ? null : _ref$buttonText,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? null : _ref$style,\n      _ref$folder = _ref.folder,\n      folder = _ref$folder === void 0 ? null : _ref$folder,\n      _ref$cropping = _ref.cropping,\n      cropping = _ref$cropping === void 0 ? true : _ref$cropping,\n      generateSignatureUrl = _ref.generateSignatureUrl,\n      _ref$onSuccess = _ref.onSuccess,\n      onSuccess = _ref$onSuccess === void 0 ? null : _ref$onSuccess,\n      _ref$onFailure = _ref.onFailure,\n      onFailure = _ref$onFailure === void 0 ? null : _ref$onFailure,\n      _ref$logging = _ref.logging,\n      logging = _ref$logging === void 0 ? true : _ref$logging,\n      _ref$customPublicId = _ref.customPublicId,\n      customPublicId = _ref$customPublicId === void 0 ? null : _ref$customPublicId,\n      _ref$eager = _ref.eager,\n      eager = _ref$eager === void 0 ? null : _ref$eager,\n      _ref$apiKey = _ref.apiKey,\n      apiKey = _ref$apiKey === void 0 ? null : _ref$apiKey,\n      _ref$accepts = _ref.accepts,\n      accepts = _ref$accepts === void 0 ? 'application/json' : _ref$accepts,\n      _ref$contentType = _ref.contentType,\n      contentType = _ref$contentType === void 0 ? 'application/json' : _ref$contentType,\n      _ref$withCredentials = _ref.withCredentials,\n      withCredentials = _ref$withCredentials === void 0 ? true : _ref$withCredentials,\n      _ref$use_filename = _ref.use_filename,\n      use_filename = _ref$use_filename === void 0 ? true : _ref$use_filename,\n      _ref$unique_filename = _ref.unique_filename,\n      unique_filename = _ref$unique_filename === void 0 ? false : _ref$unique_filename;\n\n  var myWidgetFunction = function myWidgetFunction() {\n    return myWidget(sources, sourceKeys, resourceType, cloudName, uploadPreset, folder, cropping, generateSignatureUrl, onSuccess, onFailure, logging, customPublicId, eager, apiKey, accepts, contentType, withCredentials, use_filename, unique_filename);\n  };\n\n  return /*#__PURE__*/React.createElement(WidgetButton, {\n    myWidgetFunction: myWidgetFunction,\n    buttonText: buttonText,\n    style: style\n  });\n}; // params_to_sign: [\n\n\nvar useScript = function (url) {\n  useEffect(function () {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.async = true;\n    document.body.appendChild(script);\n    return function () {\n      document.body.removeChild(script);\n    };\n  }, [url]);\n};\n\nvar WidgetLoader = function WidgetLoader() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, useScript('https://widget.cloudinary.com/v2.0/global/all.js'));\n};\n\nvar Widget = function Widget(props) {\n  return /*#__PURE__*/React.createElement(UploadWidget, props);\n};\n\nexport { Widget, WidgetLoader };","map":{"version":3,"sources":["../src/components/WidgetButton.js","../src/functions/getterFunction.js","../src/functions/generateSignature.js","../src/functions/myWidget.js","../src/components/UploadWidget.js","../src/_hooks_/useScript.js","../src/index.js"],"names":["WidgetButton","myWidgetFunction","style","buttonText","color","border","width","backgroundColor","borderRadius","height","instance","axios","response","getterFunction","url","data","accepts","contentType","withCredentials","options","method","params","generateSignature","generateSignatureUrl","customPublicId","eager","apiKey","resourceType","logging","console","Promise","uploadParams","params_to_sign","public_id","req","source","timestamp","unique_filename","upload_preset","use_filename","signature","api_key","resource_type","cb","results","myWidget","widget","window","multiple","showAdvancedOptions","showPoweredBy","sources","sourceKeys","cloudName","uploadPreset","folder","cropping","prepareUploadParams","result","onSuccess","onFailure","error","UploadWidget","useEffect","script","document","WidgetLoader","useScript","Widget"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst WidgetButton = ({ myWidgetFunction, style, buttonText }) => (\n  <>\n    <button\n      id='cloudinary_upload_button'\n      style={\n        style || {\n          color: 'white',\n          border: 'none',\n          width: '120px',\n          backgroundColor: 'green',\n          borderRadius: '4px',\n          height: '25px'\n        }\n      }\n      onClick={() => myWidgetFunction()}\n    >\n      {buttonText || 'Upload files'}\n    </button>\n  </>\n)\nexport default WidgetButton\n","import axios from 'axios'\n\nconst instance = axios.create()\n\ninstance.interceptors.response.use((response) => response.data)\n\nexport const getterFunction = ({\n  url,\n  data,\n  accepts,\n  contentType,\n  withCredentials\n}) => {\n  instance.defaults.headers.common['Accepts'] = accepts\n  instance.defaults.headers.common['Content-Type'] = contentType\n  instance.defaults.withCredentials = withCredentials\n  const options = {\n    url: url + '?nocache=' + new Date().getTime(),\n    method: 'get',\n    params: data\n  }\n\n  return instance(options)\n}\n","import { getterFunction } from './getterFunction'\n\nconst generateSignature = (\n  cb,\n  params,\n  {\n    generateSignatureUrl,\n    accepts,\n    contentType,\n    withCredentials,\n    customPublicId,\n    eager,\n    apiKey,\n    resourceType\n  },\n  logging\n) => {\n  params = [].concat(params) //params can be a single object or an array of objects\n  logging && console.log(params, 'Params')\n  Promise.all(\n    params.map((req) => {\n      const uploadParams = req\n      return getterFunction({\n        url: generateSignatureUrl,\n        data: {\n          params_to_sign: {\n            ...(eager && { eager: eager }),\n            ...(customPublicId && { public_id: customPublicId }),\n            ...(req.source && { source: req.source }),\n            timestamp: req.timestamp,\n            unique_filename: req.unique_filename,\n            ...(req.upload_preset && {\n              upload_preset: req.upload_preset\n            }),\n            ...(req.use_filename && { use_filename: req.use_filename })\n          }\n        },\n        accepts: accepts,\n        contentType: contentType,\n        withCredentials: withCredentials\n      }).then((response) => {\n        logging && console.log(response, 'Signature Response')\n        return Object.assign(\n          {\n            signature: response,\n            api_key: apiKey,\n            resource_type: resourceType\n          },\n          uploadParams\n        )\n      })\n    })\n  ).then((results) => {\n    logging && console.log(results, 'Results')\n    cb(results.length === 1 ? results[0] : results)\n  })\n}\n\nexport default generateSignature\n","import generateSignature from './generateSignature'\n\nconst myWidget = (\n  sources,\n  sourceKeys,\n  resourceType,\n  cloudName,\n  uploadPreset,\n  folder,\n  cropping,\n  generateSignatureUrl,\n  onSuccess,\n  onFailure,\n  logging,\n  customPublicId,\n  eager,\n  apiKey,\n  accepts,\n  contentType,\n  withCredentials,\n  use_filename,\n  unique_filename\n) => {\n  const widget =\n    !!window.cloudinary &&\n    window.cloudinary.createUploadWidget(\n      {\n        // showCompletedButton: true,\n        multiple: true,\n        showAdvancedOptions: true,\n        showPoweredBy: false,\n        sources: sources,\n        ...(sourceKeys && sourceKeys),\n        cloudName: cloudName,\n        uploadPreset: uploadPreset,\n        folder: folder,\n        cropping: cropping,\n        resourceType: resourceType,\n        ...(generateSignatureUrl && { use_filename: use_filename }),\n        ...(generateSignatureUrl && { unique_filename: unique_filename }),\n        ...(generateSignatureUrl && {\n          prepareUploadParams: async (cb, params) =>\n            await generateSignature(\n              cb,\n              params,\n              {\n                generateSignatureUrl,\n                accepts,\n                contentType,\n                withCredentials,\n                customPublicId,\n                eager,\n                apiKey,\n                resourceType\n              },\n              logging\n            )\n        })\n      },\n      (error, result) => {\n        if (!error && result && result.event === 'success') {\n          logging && console.log('Done! Here is the image info: ', result.info)\n          logging && console.log(result)\n          !!onSuccess && onSuccess(result)\n        } else if (!!error) {\n          !!onFailure\n            ? onFailure({ error: error, result: result })\n            : logging && console.log({ error: error, result: result })\n        } else {\n          logging && console.log(result)\n        }\n      }\n    )\n  widget.open()\n}\n\nexport default myWidget\n","import React from 'react'\nimport WidgetButton from './WidgetButton'\nimport myWidget from '../functions/myWidget'\n\nconst UploadWidget = ({\n  sources = [],\n  sourceKeys = null,\n  resourceType = 'auto',\n  cloudName = null,\n  uploadPreset = null,\n  buttonText = null,\n  style = null,\n  folder = null,\n  cropping = true,\n  generateSignatureUrl,\n  onSuccess = null,\n  onFailure = null,\n  logging = true,\n  customPublicId = null,\n  eager = null,\n  apiKey = null,\n  accepts = 'application/json',\n  contentType = 'application/json',\n  withCredentials = true,\n  use_filename = true,\n  unique_filename = false\n}) => {\n  const myWidgetFunction = () =>\n    myWidget(\n      sources,\n      sourceKeys,\n      resourceType,\n      cloudName,\n      uploadPreset,\n      folder,\n      cropping,\n      generateSignatureUrl,\n      onSuccess,\n      onFailure,\n      logging,\n      customPublicId,\n      eager,\n      apiKey,\n      accepts,\n      contentType,\n      withCredentials,\n      use_filename,\n      unique_filename\n    )\n\n  return (\n    <WidgetButton\n      myWidgetFunction={myWidgetFunction}\n      buttonText={buttonText}\n      style={style}\n    />\n  )\n}\n\n// params_to_sign: [\n//   ...(eager ? [`eager=${eager}`] : []),\n//   ...(imageName ? [`public_id=${imageName}`] : []),\n//   ...(req.source ? [`source=${req.source}`] : []),\n//   `timestamp=${req.timestamp}`,\n//   ...(req.upload_preset\n//     ? [`upload_preset=${req.upload_preset}`]\n//     : [])\nexport default UploadWidget\n","import { useEffect } from 'react'\n\nexport default (url) => {\n  useEffect(() => {\n    const script = document.createElement('script')\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.async = true\n\n    document.body.appendChild(script)\n\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [url])\n}\n","import React from 'react'\nimport UploadWidget from './components/UploadWidget'\nimport useScript from './_hooks_/useScript'\n\nexport const WidgetLoader = () => (\n  <>{useScript('https://widget.cloudinary.com/v2.0/global/all.js')}</>\n)\nexport const Widget = (props) => <UploadWidget {...props} />\n"]},"metadata":{},"sourceType":"module"}